	; TASKING VX-toolset Lite for C166: C compiler v3.1r1 Build 718 SN 00000166
	; Options: -f cc4148a --dep-file=.ADC0.obj.d -c99 -Mn --no-tasking-sfr -Cxc2210u --core=xc16x -IC:\Users\Moritz\builds\infineonxc2287\Blinky -g --make-target=ADC0.obj --language=+cmp14,+div32,-gcc,-volatile,+strings --source -o ADC0.src
	; Module start
	.source	'..\\ADC0.c'
code_ADC0_vInit	.section	code, cluster 'ADC0_vInit', new
	.global	_ADC0_vInit

; ..\ADC0.c	     1  //****************************************************************************
; ..\ADC0.c	     2  // @Module        Analog / Digital Converter  (ADC0)
; ..\ADC0.c	     3  // @Filename      ADC0.c
; ..\ADC0.c	     4  // @Project       Blinky.dav
; ..\ADC0.c	     5  //----------------------------------------------------------------------------
; ..\ADC0.c	     6  // @Controller    Infineon XC2210U-8F40L
; ..\ADC0.c	     7  //
; ..\ADC0.c	     8  // @Compiler      TASKING VX-toolset
; ..\ADC0.c	     9  //
; ..\ADC0.c	    10  // @Codegenerator 1.0
; ..\ADC0.c	    11  //
; ..\ADC0.c	    12  // @Description   This file contains functions that use the ADC0 module.
; ..\ADC0.c	    13  //
; ..\ADC0.c	    14  //----------------------------------------------------------------------------
; ..\ADC0.c	    15  // @Date          20/1/2011 16:09:34
; ..\ADC0.c	    16  //
; ..\ADC0.c	    17  //****************************************************************************
; ..\ADC0.c	    18  
; ..\ADC0.c	    19  // USER CODE BEGIN (ADC0_General,1)
; ..\ADC0.c	    20  
; ..\ADC0.c	    21  // USER CODE END
; ..\ADC0.c	    22  
; ..\ADC0.c	    23  
; ..\ADC0.c	    24  
; ..\ADC0.c	    25  //****************************************************************************
; ..\ADC0.c	    26  // @Project Includes
; ..\ADC0.c	    27  //****************************************************************************
; ..\ADC0.c	    28  
; ..\ADC0.c	    29  #include "MAIN.h"
; ..\ADC0.c	    30  
; ..\ADC0.c	    31  // USER CODE BEGIN (ADC0_General,2)
; ..\ADC0.c	    32  
; ..\ADC0.c	    33  // USER CODE END
; ..\ADC0.c	    34  
; ..\ADC0.c	    35  
; ..\ADC0.c	    36  //****************************************************************************
; ..\ADC0.c	    37  // @Macros
; ..\ADC0.c	    38  //****************************************************************************
; ..\ADC0.c	    39  
; ..\ADC0.c	    40  // USER CODE BEGIN (ADC0_General,3)
; ..\ADC0.c	    41  
; ..\ADC0.c	    42  // USER CODE END
; ..\ADC0.c	    43  
; ..\ADC0.c	    44  
; ..\ADC0.c	    45  //****************************************************************************
; ..\ADC0.c	    46  // @Defines
; ..\ADC0.c	    47  //****************************************************************************
; ..\ADC0.c	    48  
; ..\ADC0.c	    49  // USER CODE BEGIN (ADC0_General,4)
; ..\ADC0.c	    50  
; ..\ADC0.c	    51  // USER CODE END
; ..\ADC0.c	    52  
; ..\ADC0.c	    53  
; ..\ADC0.c	    54  //****************************************************************************
; ..\ADC0.c	    55  // @Typedefs
; ..\ADC0.c	    56  //****************************************************************************
; ..\ADC0.c	    57  
; ..\ADC0.c	    58  // USER CODE BEGIN (ADC0_General,5)
; ..\ADC0.c	    59  
; ..\ADC0.c	    60  // USER CODE END
; ..\ADC0.c	    61  
; ..\ADC0.c	    62  
; ..\ADC0.c	    63  //****************************************************************************
; ..\ADC0.c	    64  // @Imported Global Variables
; ..\ADC0.c	    65  //****************************************************************************
; ..\ADC0.c	    66  
; ..\ADC0.c	    67  // USER CODE BEGIN (ADC0_General,6)
; ..\ADC0.c	    68  
; ..\ADC0.c	    69  // USER CODE END
; ..\ADC0.c	    70  
; ..\ADC0.c	    71  
; ..\ADC0.c	    72  //****************************************************************************
; ..\ADC0.c	    73  // @Global Variables
; ..\ADC0.c	    74  //****************************************************************************
; ..\ADC0.c	    75  
; ..\ADC0.c	    76  // USER CODE BEGIN (ADC0_General,7)
; ..\ADC0.c	    77  
; ..\ADC0.c	    78  // USER CODE END
; ..\ADC0.c	    79  
; ..\ADC0.c	    80  
; ..\ADC0.c	    81  //****************************************************************************
; ..\ADC0.c	    82  // @External Prototypes
; ..\ADC0.c	    83  //****************************************************************************
; ..\ADC0.c	    84  
; ..\ADC0.c	    85  // USER CODE BEGIN (ADC0_General,8)
; ..\ADC0.c	    86  
; ..\ADC0.c	    87  // USER CODE END
; ..\ADC0.c	    88  
; ..\ADC0.c	    89  
; ..\ADC0.c	    90  //****************************************************************************
; ..\ADC0.c	    91  // @Prototypes Of Local Functions
; ..\ADC0.c	    92  //****************************************************************************
; ..\ADC0.c	    93  
; ..\ADC0.c	    94  // USER CODE BEGIN (ADC0_General,9)
; ..\ADC0.c	    95  
; ..\ADC0.c	    96  // USER CODE END
; ..\ADC0.c	    97  
; ..\ADC0.c	    98  
; ..\ADC0.c	    99  //****************************************************************************
; ..\ADC0.c	   100  // @Function      void ADC0_vInit(void) 
; ..\ADC0.c	   101  //
; ..\ADC0.c	   102  //----------------------------------------------------------------------------
; ..\ADC0.c	   103  // @Description   This is the initialization function of the ADC function 
; ..\ADC0.c	   104  //                library. It is assumed that the SFRs used by this library 
; ..\ADC0.c	   105  //                are in reset state. 
; ..\ADC0.c	   106  //                
; ..\ADC0.c	   107  //                Following SFR fields will be initialized:
; ..\ADC0.c	   108  //                GLOBCTR  - Global Control
; ..\ADC0.c	   109  //                RSPR0    - Priority and Arbitration Register
; ..\ADC0.c	   110  //                ASENR    - Arbitration slot enable register
; ..\ADC0.c	   111  //                CHCTRx   - Channel Control Register x
; ..\ADC0.c	   112  //                RCRx     - Result Control Register x
; ..\ADC0.c	   113  //                KSCFG    - Module configuration Register
; ..\ADC0.c	   114  //                INPCR    - Input class Registers
; ..\ADC0.c	   115  //                CHINPRx  - Channel Interrupt register
; ..\ADC0.c	   116  //                EVINPRx  - Event Interrupt register
; ..\ADC0.c	   117  //                LCBRx    - Limit check boundary register
; ..\ADC0.c	   118  //                PISEL    - Port input selection
; ..\ADC0.c	   119  //                QMR0     - Sequential 0 mode register
; ..\ADC0.c	   120  //                CRMR1    - Parallel mode register
; ..\ADC0.c	   121  //                QMR2     - Sequential 2 mode register
; ..\ADC0.c	   122  //
; ..\ADC0.c	   123  //----------------------------------------------------------------------------
; ..\ADC0.c	   124  // @Returnvalue   None
; ..\ADC0.c	   125  //
; ..\ADC0.c	   126  //----------------------------------------------------------------------------
; ..\ADC0.c	   127  // @Parameters    None
; ..\ADC0.c	   128  //
; ..\ADC0.c	   129  //----------------------------------------------------------------------------
; ..\ADC0.c	   130  // @Date          20/1/2011
; ..\ADC0.c	   131  //
; ..\ADC0.c	   132  //****************************************************************************
; ..\ADC0.c	   133  
; ..\ADC0.c	   134  // USER CODE BEGIN (ADC0_Init,1)
; ..\ADC0.c	   135  
; ..\ADC0.c	   136  // USER CODE END
; ..\ADC0.c	   137  
; ..\ADC0.c	   138  void ADC0_vInit(void)
; Function _ADC0_vInit
_9:
_ADC0_vInit	.proc	far

; ..\ADC0.c	   139  {
; ..\ADC0.c	   140    volatile unsigned int uwTemp;
; ..\ADC0.c	   141  
; ..\ADC0.c	   142    // USER CODE BEGIN (ADC0_Init,2)
; ..\ADC0.c	   143  
; ..\ADC0.c	   144    // USER CODE END
; ..\ADC0.c	   145  
; ..\ADC0.c	   146    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   147    ///  Configuration of ADC0 kernel configuration register:
; ..\ADC0.c	   148    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   149  
; ..\ADC0.c	   150    ADC0_KSCFG     =  0x0003;      // load ADC0 kernel configuration register
	movw	r11,#0x3
_123:
	movw	0xe00c,r11
_124:

; ..\ADC0.c	   151  
; ..\ADC0.c	   152    ///  - the ADC module clock is enabled
; ..\ADC0.c	   153    ///  - the ADC module clock = 40.00 MHz
; ..\ADC0.c	   154  
; ..\ADC0.c	   155    uwTemp         =  ADC0_KSCFG;  // dummy read to avoid pipeline effects
	movw	r12,0xe00c
_125:
	movw	[-r15],r12
_64:

; ..\ADC0.c	   156  
; ..\ADC0.c	   157    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   158    ///  Configure global control register:
; ..\ADC0.c	   159    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   160    ///  --- Conversion Timing -----------------
; ..\ADC0.c	   161    ///  - Conversion time (CTC) = 01.70 us
; ..\ADC0.c	   162    ///  - Analog clock is 1/4th of module clock and digital clock is 1/1 times 
; ..\ADC0.c	   163    ///  of module clock
; ..\ADC0.c	   164  
; ..\ADC0.c	   165    ///  - the permanent arbitration mode is selected
; ..\ADC0.c	   166  
; ..\ADC0.c	   167    ADC0_GLOBCTR   =  0x0003;      // load global control register
	movw	0xe010,r11
_126:

; ..\ADC0.c	   168  
; ..\ADC0.c	   169    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   170    ///  Configuration of Arbitration Slot enable register and also the Source 
; ..\ADC0.c	   171    ///  Priority register:
; ..\ADC0.c	   172    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   173    ///  - Arbitration Slot 0 is enabled
; ..\ADC0.c	   174    ///  - Arbitration Slot 1 is disabled
; ..\ADC0.c	   175    ///  - Arbitration Slot 2 is disabled
; ..\ADC0.c	   176    ///  - the priority of request source 0 is low
; ..\ADC0.c	   177    ///  - the wait-for-start mode is selected for source 0
; ..\ADC0.c	   178    ///  - the priority of request source 1 is low
; ..\ADC0.c	   179    ///  - the wait-for-start mode is selected for source 1
; ..\ADC0.c	   180    ///  - the priority of request source 2 is low
; ..\ADC0.c	   181    ///  - the wait-for-start mode is selected for source 2
; ..\ADC0.c	   182  
; ..\ADC0.c	   183    ADC0_ASENR     =  0x0001;      // load Arbitration Slot enable register
	movw	r11,#0x1
_127:
	movw	0xe018,r11
_128:

; ..\ADC0.c	   184  
; ..\ADC0.c	   185    ADC0_RSPR0     =  0x0000;      // load Priority and Arbitration register
	movw	0xe014,ZEROS
_129:

; ..\ADC0.c	   186  
; ..\ADC0.c	   187    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   188    ///  Configuration of Channel Control Registers:
; ..\ADC0.c	   189    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   190    ///  Configuration of Channel 0
; ..\ADC0.c	   191    ///  - the result register0 is selected
; ..\ADC0.c	   192    ///  - the limit check 0 is selected
; ..\ADC0.c	   193    ///  - the reference voltage selected is Standard Voltage (Varef)
; ..\ADC0.c	   194    ///  - the input class selected is Input Class 0
; ..\ADC0.c	   195    ///  - LCBR0 is selected as upper boundary
; ..\ADC0.c	   196    ///  - LCBR1 is selected as lower boundary
; ..\ADC0.c	   197  
; ..\ADC0.c	   198    ADC0_CHCTR0    =  0x0004;      // load channel control register
	movw	r12,#0x4
_130:
	movw	0xe020,r12
_131:

; ..\ADC0.c	   199  
; ..\ADC0.c	   200    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   201    ///  Configuration of Sample Time and Resolution:
; ..\ADC0.c	   202    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   203  
; ..\ADC0.c	   204    ///  Input Class Register 0, 10 bit resolution selected
; ..\ADC0.c	   205  
; ..\ADC0.c	   206    ADC0_INPCR0    =  0x0000;      // load input class0 register
	movw	0xe0c0,ZEROS
_132:

; ..\ADC0.c	   207  
; ..\ADC0.c	   208    ///  Input Class Register 1, 10 bit resolution selected
; ..\ADC0.c	   209  
; ..\ADC0.c	   210    ADC0_INPCR1    =  0x0000;      // load input class1 register
	movw	0xe0c2,ZEROS
_133:

; ..\ADC0.c	   211  
; ..\ADC0.c	   212    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   213    ///  Configuration of Result Control Registers:
; ..\ADC0.c	   214    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   215    ///  Configuration of Result Control Register 0
; ..\ADC0.c	   216    ///  - the data reduction filter is disabled
; ..\ADC0.c	   217    ///  - the event interrupt is enabled
; ..\ADC0.c	   218    ///  - the wait-for-read mode is disabled
; ..\ADC0.c	   219    ///  - the FIFO functionality is disabled
; ..\ADC0.c	   220  
; ..\ADC0.c	   221    ADC0_RCR0      =  0x0010;      // load result control register 0
	movw	r12,#0x10
_134:
	movw	0xe0b0,r12
_135:

; ..\ADC0.c	   222  
; ..\ADC0.c	   223    ///  Configuration of Result Control Register 1
; ..\ADC0.c	   224    ///  - the data reduction filter is disabled
; ..\ADC0.c	   225    ///  - the event interrupt is disabled
; ..\ADC0.c	   226    ///  - the wait-for-read mode is disabled
; ..\ADC0.c	   227    ///  - the FIFO functionality is disabled
; ..\ADC0.c	   228  
; ..\ADC0.c	   229    ADC0_RCR1      =  0x0000;      // load result control register 1
	movw	0xe0b2,ZEROS
_136:

; ..\ADC0.c	   230  
; ..\ADC0.c	   231    ///  Configuration of Result Control Register 2
; ..\ADC0.c	   232    ///  - the data reduction filter is disabled
; ..\ADC0.c	   233    ///  - the event interrupt is disabled
; ..\ADC0.c	   234    ///  - the wait-for-read mode is disabled
; ..\ADC0.c	   235    ///  - the FIFO functionality is disabled
; ..\ADC0.c	   236  
; ..\ADC0.c	   237    ADC0_RCR2      =  0x0000;      // load result control register 2
	movw	0xe0b4,ZEROS
_137:

; ..\ADC0.c	   238  
; ..\ADC0.c	   239    ///  Configuration of Result Control Register 3
; ..\ADC0.c	   240    ///  - the data reduction filter is disabled
; ..\ADC0.c	   241    ///  - the event interrupt is disabled
; ..\ADC0.c	   242    ///  - the wait-for-read mode is disabled
; ..\ADC0.c	   243    ///  - the FIFO functionality is disabled
; ..\ADC0.c	   244  
; ..\ADC0.c	   245    ADC0_RCR3      =  0x0000;      // load result control register 3
	movw	0xe0b6,ZEROS
_138:

; ..\ADC0.c	   246  
; ..\ADC0.c	   247    ///  Configuration of Result Control Register 4
; ..\ADC0.c	   248    ///  - the data reduction filter is disabled
; ..\ADC0.c	   249    ///  - the event interrupt is disabled
; ..\ADC0.c	   250    ///  - the wait-for-read mode is disabled
; ..\ADC0.c	   251    ///  - the FIFO functionality is disabled
; ..\ADC0.c	   252  
; ..\ADC0.c	   253    ADC0_RCR4      =  0x0000;      // load result control register 4
	movw	0xe0b8,ZEROS
_139:

; ..\ADC0.c	   254  
; ..\ADC0.c	   255    ///  Configuration of Result Control Register 5
; ..\ADC0.c	   256    ///  - the data reduction filter is disabled
; ..\ADC0.c	   257    ///  - the event interrupt is disabled
; ..\ADC0.c	   258    ///  - the wait-for-read mode is disabled
; ..\ADC0.c	   259    ///  - the FIFO functionality is disabled
; ..\ADC0.c	   260  
; ..\ADC0.c	   261    ADC0_RCR5      =  0x0000;      // load result control register 5
	movw	0xe0ba,ZEROS
_140:

; ..\ADC0.c	   262  
; ..\ADC0.c	   263    ///  Configuration of Result Control Register 6
; ..\ADC0.c	   264    ///  - the data reduction filter is disabled
; ..\ADC0.c	   265    ///  - the event interrupt is disabled
; ..\ADC0.c	   266    ///  - the wait-for-read mode is disabled
; ..\ADC0.c	   267    ///  - the FIFO functionality is disabled
; ..\ADC0.c	   268  
; ..\ADC0.c	   269    ADC0_RCR6      =  0x0000;      // load result control register 6
	movw	0xe0bc,ZEROS
_141:

; ..\ADC0.c	   270  
; ..\ADC0.c	   271    ///  Configuration of Result Control Register 7
; ..\ADC0.c	   272    ///  - the data reduction filter is disabled
; ..\ADC0.c	   273    ///  - the event interrupt is disabled
; ..\ADC0.c	   274    ///  - the wait-for-read mode is disabled
; ..\ADC0.c	   275    ///  - the FIFO functionality is disabled
; ..\ADC0.c	   276  
; ..\ADC0.c	   277    ADC0_RCR7      =  0x0000;      // load result control register 7
	movw	0xe0be,ZEROS
_142:

; ..\ADC0.c	   278  
; ..\ADC0.c	   279    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   280    ///  Configuration of Channel Interrupt Node Pointer Register:
; ..\ADC0.c	   281    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   282    ///  - the SR0 line become activated if channel 0 interrupt is generated
; ..\ADC0.c	   283  
; ..\ADC0.c	   284    ADC0_CHINPR0   =  0x0000;      // load channel interrupt node pointer 
	movw	0xe098,ZEROS
_143:

; ..\ADC0.c	   285                                   // register
; ..\ADC0.c	   286  
; ..\ADC0.c	   287  
; ..\ADC0.c	   288    ADC0_CHINPR4   =  0x0000;      // load channel interrupt node pointer 
	movw	0xe09a,ZEROS
_144:

; ..\ADC0.c	   289                                   // register
; ..\ADC0.c	   290  
; ..\ADC0.c	   291  
; ..\ADC0.c	   292    ADC0_CHINPR8   =  0x0000;      // load channel interrupt node pointer 
	movw	0xe09c,ZEROS
_145:

; ..\ADC0.c	   293                                   // register
; ..\ADC0.c	   294  
; ..\ADC0.c	   295  
; ..\ADC0.c	   296    ADC0_CHINPR12  =  0x0000;      // load channel interrupt node pointer 
	movw	0xe09e,ZEROS
_146:

; ..\ADC0.c	   297                                   // register
; ..\ADC0.c	   298  
; ..\ADC0.c	   299  
; ..\ADC0.c	   300    ADC0_CHINPR16  =  0x0000;      // load channel interrupt node pointer 
	movw	0xe208,ZEROS
_147:

; ..\ADC0.c	   301                                   // register
; ..\ADC0.c	   302  
; ..\ADC0.c	   303  
; ..\ADC0.c	   304    ADC0_CHINPR20  =  0x0000;      // load channel interrupt node pointer 
	movw	0xe20a,ZEROS
_148:

; ..\ADC0.c	   305                                   // register
; ..\ADC0.c	   306  
; ..\ADC0.c	   307    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   308    ///  Configuration of Event Interrupt Node Pointer Register for Source 
; ..\ADC0.c	   309    ///  Interrupts:
; ..\ADC0.c	   310    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   311    ///  - the SR 0 line become activated if the event 0 interrupt is generated
; ..\ADC0.c	   312  
; ..\ADC0.c	   313    ADC0_EVINPR0   =  0x0000;      // load event interrupt set flag register 
	movw	0xe0a8,ZEROS
_149:

; ..\ADC0.c	   314  
; ..\ADC0.c	   315    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   316    ///  Configuration of Event Interrupt Node Pointer Register for Result 
; ..\ADC0.c	   317    ///  Interrupts:
; ..\ADC0.c	   318    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   319    ///  - the SR 0 line become activated if the event 8 interrupt is generated
; ..\ADC0.c	   320  
; ..\ADC0.c	   321    ADC0_EVINPR8   =  0x0000;      // load event interrupt set flag register 
	movw	0xe0ac,ZEROS
_150:

; ..\ADC0.c	   322  
; ..\ADC0.c	   323  
; ..\ADC0.c	   324    ADC0_EVINPR12  =  0x0000;      // load event interrupt set flag register 
	movw	0xe0ae,ZEROS
_151:

; ..\ADC0.c	   325  
; ..\ADC0.c	   326    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   327    ///  Configuration of Service Request Nodes 0 - 3 :
; ..\ADC0.c	   328    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   329    ///  SRN0 service request node configuration:
; ..\ADC0.c	   330    ///  - SRN0 interrupt priority level (ILVL) = 2
; ..\ADC0.c	   331    ///  - SRN0 interrupt group level (GLVL) = 0
; ..\ADC0.c	   332    ///  - SRN0 group priority extension (GPX) = 0
; ..\ADC0.c	   333  
; ..\ADC0.c	   334    ADC_0IC        =  0x0048;     
	movw	0xff70,#0x48
_152:

; ..\ADC0.c	   335  
; ..\ADC0.c	   336  
; ..\ADC0.c	   337    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   338    ///  Configuration of Limit Check Boundary:
; ..\ADC0.c	   339    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   340  
; ..\ADC0.c	   341    ADC0_LCBR0     =  0x0198;      // load limit check boundary register 0
	movw	r12,#0x198
_153:
	movw	0xe084,r12
_154:

; ..\ADC0.c	   342  
; ..\ADC0.c	   343    ADC0_LCBR1     =  0x0E64;      // load limit check boundary register 1
	movw	r12,#0xe64
_155:
	movw	0xe086,r12
_156:

; ..\ADC0.c	   344  
; ..\ADC0.c	   345    ADC0_LCBR2     =  0x0554;      // load limit check boundary register 2
	movw	r12,#0x554
_157:
	movw	0xe088,r12
_158:

; ..\ADC0.c	   346  
; ..\ADC0.c	   347    ADC0_LCBR3     =  0x0AA8;      // load limit check boundary register 3
	movw	r12,#0xaa8
_159:
	movw	0xe08a,r12
_160:

; ..\ADC0.c	   348  
; ..\ADC0.c	   349    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   350    ///  Configuration of Gating source and External Trigger Control:
; ..\ADC0.c	   351    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   352    ///  - No Gating source selected for Arbitration Source 0
; ..\ADC0.c	   353  
; ..\ADC0.c	   354    ///  - the trigger input selection is not enabled for source 0
; ..\ADC0.c	   355  
; ..\ADC0.c	   356    ADC0_RSIR0     =  0x0000;      // load external trigger control register 
	movw	0xe000,ZEROS
_161:

; ..\ADC0.c	   357                                   // for Request Source 0
; ..\ADC0.c	   358  
; ..\ADC0.c	   359    ///  - No Gating source selected for Arbitration Source 1
; ..\ADC0.c	   360  
; ..\ADC0.c	   361    ///  - the trigger input TRSEL selection is not enabled for Source 1
; ..\ADC0.c	   362  
; ..\ADC0.c	   363    ADC0_RSIR1     =  0x0000;      // load external trigger control register 
	movw	0xe002,ZEROS
_162:

; ..\ADC0.c	   364                                   // for Request Source 1
; ..\ADC0.c	   365  
; ..\ADC0.c	   366    ///  - No Gating source selected for Arbitration Source 2
; ..\ADC0.c	   367  
; ..\ADC0.c	   368    ///  - the trigger input TRSEL selection is not enabled for Source 2
; ..\ADC0.c	   369  
; ..\ADC0.c	   370    ADC0_RSIR2     =  0x0000;      // load external trigger control register 
	movw	0xe004,ZEROS
_163:

; ..\ADC0.c	   371                                   // for Request Source 2
; ..\ADC0.c	   372  
; ..\ADC0.c	   373    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   374    ///  Configuration of Conversion Queue Mode Register:Sequential Source 0
; ..\ADC0.c	   375    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   376    ///  - the gating line is permanently Enabled
; ..\ADC0.c	   377    ///  - the external trigger is disabled
; ..\ADC0.c	   378  
; ..\ADC0.c	   379    ADC0_QMR0      =  0x0001;      // load queue mode register
	movw	0xe0e0,r11
_164:

; ..\ADC0.c	   380  
; ..\ADC0.c	   381    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   382    ///  Configuration of Conversion Queue Mode Register:Sequential Source 2
; ..\ADC0.c	   383    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   384    ///  - the gating line is permanently Disabled
; ..\ADC0.c	   385    ///  - the external trigger is disabled
; ..\ADC0.c	   386    ///  - the trigger mode 0 is selected
; ..\ADC0.c	   387  
; ..\ADC0.c	   388    ADC0_QMR2      =  0x0000;      // load queue mode register
	movw	0xe0f0,ZEROS
_165:

; ..\ADC0.c	   389  
; ..\ADC0.c	   390    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   391    ///  Configuration of Conversion Request Mode Registers:Parallel Source 
; ..\ADC0.c	   392    ///  -----------------------------------------------------------------------
; ..\ADC0.c	   393    ///  - the gating line is permanently Disabled
; ..\ADC0.c	   394    ///  - the external trigger is disabled
; ..\ADC0.c	   395    ///  - the source interrupt is disabled
; ..\ADC0.c	   396    ///  - the autoscan functionality is disabled
; ..\ADC0.c	   397  
; ..\ADC0.c	   398    ADC0_CRMR1     =  0x0000;      // load conversion request mode register 1
	movw	0xe0ec,ZEROS
_166:

; ..\ADC0.c	   399  
; ..\ADC0.c	   400    P5_DIDIS       =  0x0001;      // Port 5 Digital input disable register
	movw	0xfe8a,#0x1
_167:

; ..\ADC0.c	   401  
; ..\ADC0.c	   402    P6_DIDIS       =  0x0000;      // Port 6 Digital input disable register
	movw	0xfe4e,ZEROS
_168:

; ..\ADC0.c	   403  
; ..\ADC0.c	   404    P2_DIDIS       =  0x0000;      // Port 2 Digital input disable register
	movw	0xe9fe,ZEROS
_169:

; ..\ADC0.c	   405  
; ..\ADC0.c	   406    ADC0_GLOBCTR  |=  0x0300;      // turn on Analog part
	movw	r11,#0x300
_170:
	orw	0xe010,r11
_171:

; ..\ADC0.c	   407  
; ..\ADC0.c	   408  
; ..\ADC0.c	   409    // USER CODE BEGIN (ADC0_Init,3)
; ..\ADC0.c	   410  
; ..\ADC0.c	   411    // USER CODE END
; ..\ADC0.c	   412  
; ..\ADC0.c	   413  } //  End of function ADC0_vInit
	addw	r15,#0x2
_75:
	ret
_42:
	; End of function
	; End of section

code_ADC0_vStartSeq0ReqChNum	.section	code, cluster 'ADC0_vStartSeq0ReqChNum', new
	.global	_ADC0_vStartSeq0ReqChNum

; ..\ADC0.c	   414  
; ..\ADC0.c	   415  
; ..\ADC0.c	   416  //****************************************************************************
; ..\ADC0.c	   417  // @Function      void ADC0_vStartSeq0ReqChNum(ubyte ubExtTrg, ubyte 
; ..\ADC0.c	   418  //                ubEnIntr, ubyte ubRFill, ubyte ubChannelNum) 
; ..\ADC0.c	   419  //
; ..\ADC0.c	   420  //----------------------------------------------------------------------------
; ..\ADC0.c	   421  // @Description   This function starts the conversion of the requested 
; ..\ADC0.c	   422  //                channel.
; ..\ADC0.c	   423  //                NOTE -
; ..\ADC0.c	   424  //                Before passing ubEnIntr argument as 1,make sure that Seq 0 
; ..\ADC0.c	   425  //                source interrupt is enabled.
; ..\ADC0.c	   426  //                External Trigger -> 0,Indicates software trigger 
; ..\ADC0.c	   427  //                (Conversion starts once this function is executed)
; ..\ADC0.c	   428  //
; ..\ADC0.c	   429  //----------------------------------------------------------------------------
; ..\ADC0.c	   430  // @Returnvalue   None
; ..\ADC0.c	   431  //
; ..\ADC0.c	   432  //----------------------------------------------------------------------------
; ..\ADC0.c	   433  // @Parameters    ubExtTrg: 
; ..\ADC0.c	   434  //                External Trigger : defines external trigger.
; ..\ADC0.c	   435  // @Parameters    ubEnIntr: 
; ..\ADC0.c	   436  //                Enable Source Interrupt : defines source interrupt
; ..\ADC0.c	   437  // @Parameters    ubRFill: 
; ..\ADC0.c	   438  //                Refill : defines the refill
; ..\ADC0.c	   439  // @Parameters    ubChannelNum: 
; ..\ADC0.c	   440  //                Channel number : Name of the Request Channel Number (0 - 
; ..\ADC0.c	   441  //                15)- see macros defined in the header file
; ..\ADC0.c	   442  //
; ..\ADC0.c	   443  //----------------------------------------------------------------------------
; ..\ADC0.c	   444  // @Date          20/1/2011
; ..\ADC0.c	   445  //
; ..\ADC0.c	   446  //****************************************************************************
; ..\ADC0.c	   447  
; ..\ADC0.c	   448  void ADC0_vStartSeq0ReqChNum(ubyte ubExtTrg, ubyte ubEnIntr, ubyte ubRFill, ubyte ubChannelNum)
; Function _ADC0_vStartSeq0ReqChNum
_21:
_ADC0_vStartSeq0ReqChNum	.proc	far

; ..\ADC0.c	   449  {
; ..\ADC0.c	   450  
; ..\ADC0.c	   451      uword uwVal = 0;
	movw	r11,#0x0
_106:

; ..\ADC0.c	   452      if (ubExtTrg == 1)
	cmpb	rl2,#0x1
	jmp	cc_ne,_2
_176:

; ..\ADC0.c	   453      {
; ..\ADC0.c	   454          uwVal = 0x0080;
	movw	r11,#0x80
_2:

; ..\ADC0.c	   455      }
; ..\ADC0.c	   456      if (ubEnIntr == 1)
	cmpb	rh2,#0x1
	jmp	cc_ne,_3
_177:

; ..\ADC0.c	   457      {
; ..\ADC0.c	   458          uwVal = uwVal + 0x0040;
	addw	r11,#0x40
_3:

; ..\ADC0.c	   459      }
; ..\ADC0.c	   460      if (ubRFill == 1)
	cmpb	rl3,#0x1
	jmp	cc_ne,_4
_178:

; ..\ADC0.c	   461      {
; ..\ADC0.c	   462          uwVal = uwVal + 0x0020;
	addw	r11,#0x20
_4:

; ..\ADC0.c	   463      }
; ..\ADC0.c	   464      uwVal = uwVal + (ubChannelNum & 0x001f);
	andb	rh3,#0x1f
	movbz	r12,rh3
_179:
	addw	r11,r12
_180:

; ..\ADC0.c	   465  
; ..\ADC0.c	   466     ADC0_QINR0 = uwVal; // requested channel 
	movw	0xe0e6,r11
_181:

; ..\ADC0.c	   467  
; ..\ADC0.c	   468  } //  End of function ADC0_vStartSeq0ReqChNum
	ret
_47:
	; End of function
	; End of section

code_ADC0_viSRN0	.section	code, cluster 'ADC0_viSRN0', new
	.global	_ADC0_viSRN0

; ..\ADC0.c	   469  
; ..\ADC0.c	   470  
; ..\ADC0.c	   471  //****************************************************************************
; ..\ADC0.c	   472  // @Function      void ADC0_viSRN0(void) 
; ..\ADC0.c	   473  //
; ..\ADC0.c	   474  //----------------------------------------------------------------------------
; ..\ADC0.c	   475  // @Description   This is the interrupt service routine for the Service 
; ..\ADC0.c	   476  //                Request Node 0 of the ADC0 module.
; ..\ADC0.c	   477  //
; ..\ADC0.c	   478  //----------------------------------------------------------------------------
; ..\ADC0.c	   479  // @Returnvalue   None
; ..\ADC0.c	   480  //
; ..\ADC0.c	   481  //----------------------------------------------------------------------------
; ..\ADC0.c	   482  // @Parameters    None
; ..\ADC0.c	   483  //
; ..\ADC0.c	   484  //----------------------------------------------------------------------------
; ..\ADC0.c	   485  // @Date          20/1/2011
; ..\ADC0.c	   486  //
; ..\ADC0.c	   487  //****************************************************************************
; ..\ADC0.c	   488  
; ..\ADC0.c	   489  // USER CODE BEGIN (ADC0_viSRN0,0)
; ..\ADC0.c	   490  uword uwResult;
; ..\ADC0.c	   491  // USER CODE END
; ..\ADC0.c	   492  
; ..\ADC0.c	   493  _interrupt(ADC0_SRN0INT)  void ADC0_viSRN0(void)
; Function _ADC0_viSRN0
_33:
_ADC0_viSRN0	.proc	intno ADC0_viSRN0_trap = 40
	push	MDH
_107:
	push	MDL
_108:
	push	r11
_109:
	push	r12
_110:

; ..\ADC0.c	   494  {
; ..\ADC0.c	   495  
; ..\ADC0.c	   496      if((ADC0_EVINFR & 0x0100) == 0x0100)    //Result0 event interrupt 
	movw	r11,0xe0a0
_186:
	jnb	r11.8,_5
_187:

; ..\ADC0.c	   497      {
; ..\ADC0.c	   498          ADC0_EVINCR = 0x0100;     // Clear Result0 event interrupt
	movw	r11,#0x100
_188:
	movw	0xe0a2,r11
_189:

; ..\ADC0.c	   499  
; ..\ADC0.c	   500        // USER CODE BEGIN (ADC0_viSRN0,20)
; ..\ADC0.c	   501          uwResult = ADC0_uwGetResultData_RESULT_REG_0;
	movw	r11,0xe0b0
	jnb	r11.12,_6
	movw	r11,0xe040
	andw	r11,#0xfff
	jmp	_7
_6:
	movw	r11,#0x0
_7:
	movw	_uwResult,r11
_190:

; ..\ADC0.c	   502          uwResult >>= 2;
	shr	r11,#0x2
	movw	_uwResult,r11
_191:

; ..\ADC0.c	   503          uwResult = (uwResult * 50);
	movw	r11,_uwResult
_192:
	movw	r12,#0x32
_193:
	mulu	r11,r12
_194:
	movw	_uwResult,MDL
_195:

; ..\ADC0.c	   504          GPT2_vLoadCAPREL(uwResult);
	movw	0xfe4a,_uwResult
_5:

; ..\ADC0.c	   505        // USER CODE END
; ..\ADC0.c	   506  
; ..\ADC0.c	   507      }
; ..\ADC0.c	   508  
; ..\ADC0.c	   509  
; ..\ADC0.c	   510  } //  End of function ADC0_viSRN0
	pop	r12
_111:
	pop	r11
_112:
	pop	MDL
_113:
	pop	MDH
_114:
	reti
_52:
	; End of function
	; End of section

near_uwResult	.section	near, clear, cluster 'uwResult', new
	.global	_uwResult
_uwResult	.label	nearword
	.ds	2
	; End of section

	.calls	'_ADC0_vInit','',4,2
	.calls	'_ADC0_vStartSeq0ReqChNum','',4,0
	.calls	'_ADC0_viSRN0','',14,0
	.debug		.debug_info
_35:
	.dl	258
	.dw	3
	.dl	_36
	.db	4
_34:
	.db	1
	.db	'..\\ADC0.c',0
	.db	'TASKING VX-toolset Lite for C166: C compiler',0
	.db	'C:\\Users\\Moritz\\builds\\infineonxc2287\\Blinky\\Debug\\',0,12,1
	.dl	_37
_62:
	.db	2
	.db	'unsigned int',0,2,7
_55:
	.db	3
	.dl	125
_57:
	.db	2
	.db	'unsigned char',0,1,8,4
	.db	'void',0,5,2
	.dl	163
	.db	6
	.db	'__prof_adm',0,1,1,1
	.dl	169
	.db	2
	.db	'unsigned long int',0,4,7,6
	.db	'__codeptr',0,1,1,1
	.dl	194
	.db	6
	.db	'ubyte',0,2,25,24
	.dl	146
	.db	6
	.db	'uword',0,2,27,24
	.dl	125
	.db	0
	; End of section

	.debug		.debug_abbrev
_36:
	.db	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,53,0,73,19,0,0,4,59,0,3,8,0
	.db	0,5,15,0,51,15,73,19,0,0,6,22,0,3,8,58,15,59,15,57,15,73,19,0,0,0
	; End of section

	.debug		.debug_line
_37:
	.dl	_116-_115
_115:
	.dw	3
	.dl	_118-_117
_117:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'..\\ADC0.c',0,0,0,0
	.db	'..\\XC22xxUREGS.H',0,0,0,0,0
_118:
_116:
	; End of section

	.debug		.debug_info, cluster 'ADC0_vInit'
_38:
	.dl	208
	.dw	3
	.dl	_39
	.db	4,1
	.db	'..\\ADC0.c',0
	.db	'TASKING VX-toolset Lite for C166: C compiler',0
	.db	'C:\\Users\\Moritz\\builds\\infineonxc2287\\Blinky\\Debug\\',0,12,1
	.dl	_41,_40
	.db	2
	.dl	_34
	.db	3
	.db	'ADC0_vInit',0,1,138,1,6,6,1,1,1
	.dl	_9,_42,_8
	.db	12,19,146,176,2,0,64,36,146,161,2,0,33,4
	.dl	_9,_42
	.db	5
	.db	'uwTemp',0,1,140,1,25,2
	.dl	_55,_56
	.db	0,0,0
	; End of section

	.debug		.debug_abbrev, cluster 'ADC0_vInit'
_39:
	.db	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,51,15
	.db	54,15,39,12,63,12,17,1,18,1,64,6,42,9,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,51,15,73,16
	.db	2,6,0,0,0
	; End of section

	.debug		.debug_line, cluster 'ADC0_vInit'
_40:
	.dl	_120-_119
_119:
	.dw	3
	.dl	_122-_121
_121:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'..\\ADC0.c',0,0,0,0,0
_122:
	.db	5,21,7,0,5,2
	.dl	_9
	.db	3,149,1,1,5,18,9
	.dw	_123-_9
	.db	1,5,21,9
	.dw	_124-_123
	.db	3,5,1,5,18,9
	.dw	_125-_124
	.db	1,9
	.dw	_64-_125
	.db	3,12,1,5,21,9
	.dw	_126-_64
	.db	3,16,1,5,18,9
	.dw	_127-_126
	.db	1,9
	.dw	_128-_127
	.db	3,2,1,5,21,9
	.dw	_129-_128
	.db	3,13,1,5,18,9
	.dw	_130-_129
	.db	1,9
	.dw	_131-_130
	.db	3,8,1,9
	.dw	_132-_131
	.db	3,4,1,5,21,9
	.dw	_133-_132
	.db	3,11,1,5,18,9
	.dw	_134-_133
	.db	1,9
	.dw	_135-_134
	.db	3,8,1,9
	.dw	_136-_135
	.db	3,8,1,9
	.dw	_137-_136
	.db	3,8,1,9
	.dw	_138-_137
	.db	3,8,1,9
	.dw	_139-_138
	.db	3,8,1,9
	.dw	_140-_139
	.db	3,8,1,9
	.dw	_141-_140
	.db	3,8,1,9
	.dw	_142-_141
	.db	3,7,1,9
	.dw	_143-_142
	.db	3,4,1,9
	.dw	_144-_143
	.db	3,4,1,9
	.dw	_145-_144
	.db	3,4,1,9
	.dw	_146-_145
	.db	3,4,1,9
	.dw	_147-_146
	.db	3,4,1,9
	.dw	_148-_147
	.db	3,9,1,9
	.dw	_149-_148
	.db	3,8,1,9
	.dw	_150-_149
	.db	3,3,1,9
	.dw	_151-_150
	.db	3,10,1,5,21,9
	.dw	_152-_151
	.db	3,7,1,5,18,9
	.dw	_153-_152
	.db	1,5,21,9
	.dw	_154-_153
	.db	3,2,1,5,18,9
	.dw	_155-_154
	.db	1,5,21,9
	.dw	_156-_155
	.db	3,2,1,5,18,9
	.dw	_157-_156
	.db	1,5,21,9
	.dw	_158-_157
	.db	3,2,1,5,18,9
	.dw	_159-_158
	.db	1,9
	.dw	_160-_159
	.db	3,9,1,9
	.dw	_161-_160
	.db	3,7,1,9
	.dw	_162-_161
	.db	3,7,1,9
	.dw	_163-_162
	.db	3,9,1,9
	.dw	_164-_163
	.db	3,9,1,9
	.dw	_165-_164
	.db	3,10,1,9
	.dw	_166-_165
	.db	3,2,1,9
	.dw	_167-_166
	.db	3,2,1,9
	.dw	_168-_167
	.db	3,2,1,5,21,9
	.dw	_169-_168
	.db	3,2,1,5,17,9
	.dw	_170-_169
	.db	1,5,1,9
	.dw	_171-_170
	.db	3,7,1,9
	.dw	_42-_171
	.db	0,1,1
_120:
	; End of section

	.debug		.debug_ranges, cluster 'ADC0_vInit'
_41:
	.dl	-1,_9,0,_42-_9,0,0
	; End of section

	.debug		.debug_info, cluster 'ADC0_vStartSeq0ReqChNum'
_43:
	.dl	311
	.dw	3
	.dl	_44
	.db	4,1
	.db	'..\\ADC0.c',0
	.db	'TASKING VX-toolset Lite for C166: C compiler',0
	.db	'C:\\Users\\Moritz\\builds\\infineonxc2287\\Blinky\\Debug\\',0,12,1
	.dl	_46,_45
	.db	2
	.dl	_34
	.db	3
	.db	'ADC0_vStartSeq0ReqChNum',0,1,192,3,6,6,1,1,1
	.dl	_21,_47,_20
	.db	12,19,146,176,2,0,64,36,146,161,2,0,33,4
	.db	'ubExtTrg',0,1,192,3,36
	.dl	_57,_58
	.db	4
	.db	'ubEnIntr',0,1,192,3,52
	.dl	_57,_59
	.db	4
	.db	'ubRFill',0,1,192,3,68
	.dl	_57,_60
	.db	4
	.db	'ubChannelNum',0,1,192,3,83
	.dl	_57,_61
	.db	5
	.dl	_21,_47
	.db	6
	.db	'uwVal',0,1,195,3,11,2
	.dl	_62,_63
	.db	0,0,0
	; End of section

	.debug		.debug_abbrev, cluster 'ADC0_vStartSeq0ReqChNum'
_44:
	.db	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,51,15
	.db	54,15,39,12,63,12,17,1,18,1,64,6,42,9,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0
	.db	0,6,52,0,3,8,58,15,59,15,57,15,51,15,73,16,2,6,0,0,0
	; End of section

	.debug		.debug_line, cluster 'ADC0_vStartSeq0ReqChNum'
_45:
	.dl	_173-_172
_172:
	.dw	3
	.dl	_175-_174
_174:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'..\\ADC0.c',0,0,0,0,0
_175:
	.db	5,17,7,0,5,2
	.dl	_21
	.db	3,194,3,1,5,5,9
	.dw	_106-_21
	.db	3,1,1,5,15,9
	.dw	_176-_106
	.db	3,2,1,5,5,9
	.dw	_2-_176
	.db	3,2,1,5,23,9
	.dw	_177-_2
	.db	3,2,1,5,5,9
	.dw	_3-_177
	.db	3,2,1,5,23,9
	.dw	_178-_3
	.db	3,2,1,5,35,9
	.dw	_4-_178
	.db	3,2,1,5,19,9
	.dw	_179-_4
	.db	1,5,15,9
	.dw	_180-_179
	.db	3,2,1,5,1,9
	.dw	_181-_180
	.db	3,2,1,7,9
	.dw	_47-_181
	.db	0,1,1
_173:
	; End of section

	.debug		.debug_ranges, cluster 'ADC0_vStartSeq0ReqChNum'
_46:
	.dl	-1,_21,0,_47-_21,0,0
	; End of section

	.debug		.debug_info, cluster 'ADC0_viSRN0'
_48:
	.dl	177
	.dw	3
	.dl	_49
	.db	4,1
	.db	'..\\ADC0.c',0
	.db	'TASKING VX-toolset Lite for C166: C compiler',0
	.db	'C:\\Users\\Moritz\\builds\\infineonxc2287\\Blinky\\Debug\\',0,12,1
	.dl	_51,_50
	.db	2
	.dl	_34
	.db	3
	.db	'ADC0_viSRN0',0,1,237,3,32,6,101,1,1
	.dl	_33,_52,_32
	.db	2,145,0,4
	.dl	_33,_52
	.db	0,0
	; End of section

	.debug		.debug_abbrev, cluster 'ADC0_viSRN0'
_49:
	.db	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,51,15
	.db	54,15,39,12,63,12,17,1,18,1,64,6,42,9,0,0,4,11,0,17,1,18,1,0,0,0
	; End of section

	.debug		.debug_line, cluster 'ADC0_viSRN0'
_50:
	.dl	_183-_182
_182:
	.dw	3
	.dl	_185-_184
_184:
	.db	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.db	'..\\ADC0.c',0,0,0,0,0
_185:
	.db	5,32,7,0,5,2
	.dl	_33
	.db	3,236,3,1,5,9,9
	.dw	_110-_33
	.db	3,3,1,5,5,9
	.dw	_186-_110
	.db	1,5,23,7,9
	.dw	_187-_186
	.db	3,2,1,5,21,9
	.dw	_188-_187
	.db	1,5,20,9
	.dw	_189-_188
	.db	3,3,1,5,18,9
	.dw	_7-_189
	.db	1,9
	.dw	_190-_7
	.db	3,1,1,5,21,9
	.dw	_191-_190
	.db	3,1,1,5,32,9
	.dw	_192-_191
	.db	1,5,30,9
	.dw	_193-_192
	.db	1,5,18,9
	.dw	_194-_193
	.db	1,5,9,9
	.dw	_195-_194
	.db	3,1,1,5,1,9
	.dw	_5-_195
	.db	3,6,1,9
	.dw	_52-_5
	.db	0,1,1
_183:
	; End of section

	.debug		.debug_ranges, cluster 'ADC0_viSRN0'
_51:
	.dl	-1,_33,0,_52-_33,0,0
	; End of section

	.debug		.debug_info, cluster 'uwResult'
_53:
	.dl	149
	.dw	3
	.dl	_54
	.db	4,1
	.db	'..\\ADC0.c',0
	.db	'TASKING VX-toolset Lite for C166: C compiler',0
	.db	'C:\\Users\\Moritz\\builds\\infineonxc2287\\Blinky\\Debug\\',0,12,1,2
	.dl	_34
	.db	3
	.db	'uwResult',0,1,234,3,7,2
	.dl	_62
	.db	1,5,3
	.dl	_uwResult
	.db	0
	; End of section

	.debug		.debug_abbrev, cluster 'uwResult'
_54:
	.db	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,51,15,73,16,63
	.db	12,2,9,0,0,0
	; End of section

	.debug		.debug_loc, cluster 'ADC0_vInit'
_8:
	.dl	-1,_9,0,_64-_9
	.dw	58
	.db	127,0,18,10
	.dw	16383
	.db	26,22,62,37,18,48,46,40
	.dw	_10-_14
_14:
	.db	146,177,2,0,47
	.dw	_13-_15
_15:
_10:
	.db	18,49,46,40
	.dw	_11-_16
_16:
	.db	146,178,2,0,47
	.dw	_13-_17
_17:
_11:
	.db	18,50,46,40
	.dw	_12-_18
_18:
	.db	146,179,2,0,47
	.dw	_13-_19
_19:
_12:
	.db	146,180,2,0
_13:
	.db	22,19,62,36,33
	.dl	_64-_9,_75-_9
	.dw	60
	.db	127,0,18,10
	.dw	16383
	.db	26,22,62,37,18,48,46,40
	.dw	_65-_69
_69:
	.db	146,177,2,0,47
	.dw	_68-_70
_70:
_65:
	.db	18,49,46,40
	.dw	_66-_71
_71:
	.db	146,178,2,0,47
	.dw	_68-_72
_72:
_66:
	.db	18,50,46,40
	.dw	_67-_73
_73:
	.db	146,179,2,0,47
	.dw	_68-_74
_74:
_67:
	.db	146,180,2,0
_68:
	.db	22,19,62,36,33,50,34
	.dl	_75-_9,_42-_9
	.dw	58
	.db	127,0,18,10
	.dw	16383
	.db	26,22,62,37,18,48,46,40
	.dw	_76-_80
_80:
	.db	146,177,2,0,47
	.dw	_79-_81
_81:
_76:
	.db	18,49,46,40
	.dw	_77-_82
_82:
	.db	146,178,2,0,47
	.dw	_79-_83
_83:
_77:
	.db	18,50,46,40
	.dw	_78-_84
_84:
	.db	146,179,2,0,47
	.dw	_79-_85
_85:
_78:
	.db	146,180,2,0
_79:
	.db	22,19,62,36,33
	.dl	0,0
_56:
	.dl	-1,_9,0,_42-_9
	.dw	2
	.db	145,126
	.dl	0,0
	; End of section

	.debug		.debug_loc, cluster 'ADC0_vStartSeq0ReqChNum'
_20:
	.dl	-1,_21,0,_47-_21
	.dw	58
	.db	127,0,18,10
	.dw	16383
	.db	26,22,62,37,18,48,46,40
	.dw	_22-_26
_26:
	.db	146,177,2,0,47
	.dw	_25-_27
_27:
_22:
	.db	18,49,46,40
	.dw	_23-_28
_28:
	.db	146,178,2,0,47
	.dw	_25-_29
_29:
_23:
	.db	18,50,46,40
	.dw	_24-_30
_30:
	.db	146,179,2,0,47
	.dw	_25-_31
_31:
_24:
	.db	146,180,2,0
_25:
	.db	22,19,62,36,33
	.dl	0,0
_61:
	.dl	-1,_21,0,_47-_21
	.dw	4
	.db	83,157,8,8
	.dl	0,0
_59:
	.dl	-1,_21,0,_47-_21
	.dw	4
	.db	82,157,8,8
	.dl	0,0
_58:
	.dl	-1,_21,0,_47-_21
	.dw	4
	.db	82,157,8,0
	.dl	0,0
_60:
	.dl	-1,_21,0,_47-_21
	.dw	4
	.db	83,157,8,0
	.dl	0,0
_63:
	.dl	-1,_21,_106-_21,_47-_21
	.dw	1
	.db	91
	.dl	0,0
	; End of section

	.debug		.debug_loc, cluster 'ADC0_viSRN0'
_32:
	.dl	-1,_33,0,_107-_33
	.dw	11
	.db	146,176,2,0,64,36,146,161,2,0,33
	.dl	_107-_33,_108-_33
	.dw	11
	.db	146,176,2,0,64,36,146,161,2,2,33
	.dl	_108-_33,_109-_33
	.dw	11
	.db	146,176,2,0,64,36,146,161,2,4,33
	.dl	_109-_33,_110-_33
	.dw	11
	.db	146,176,2,0,64,36,146,161,2,6,33
	.dl	_110-_33,_111-_33
	.dw	11
	.db	146,176,2,0,64,36,146,161,2,8,33
	.dl	_111-_33,_112-_33
	.dw	11
	.db	146,176,2,0,64,36,146,161,2,6,33
	.dl	_112-_33,_113-_33
	.dw	11
	.db	146,176,2,0,64,36,146,161,2,4,33
	.dl	_113-_33,_114-_33
	.dw	11
	.db	146,176,2,0,64,36,146,161,2,2,33
	.dl	_114-_33,_52-_33
	.dw	11
	.db	146,176,2,0,64,36,146,161,2,0,33
	.dl	0,0
	; End of section

	.debug		.debug_frame
_196:
	.dl	184
	.dl	-1
	.db	3,0,2,2,173,2,15,60,127,0,18,10
	.dw	16383
	.db	26,22,62,37,18,48,46,40
	.dw	_197-_201
_201:
	.db	146,177,2,0,47
	.dw	_200-_202
_202:
_197:
	.db	18,49,46,40
	.dw	_198-_203
_203:
	.db	146,178,2,0,47
	.dw	_200-_204
_204:
_198:
	.db	18,50,46,40
	.dw	_199-_205
_205:
	.db	146,179,2,0,47
	.dw	_200-_206
_206:
_199:
	.db	146,180,2,0
_200:
	.db	22,19,62,36,33,48,34,16,173,2,12,19,146,176,2,0,64,36,146,161,2,0,33,8,15,22,161,2,5,19,146,161,2,4,8
	.db	162,2,8,166,2,8,177,2,8,178,2,8,179,2,8,180,2,8,0,8,1,8,6,8,7,8,8,8,9,8,10,8,167,2,8,168,2,8,169,2,8,170
	.db	2,8,171,2,8,172,2,16,174,2,12,19,146,176,2,0,64,36,146,161,2,0,33,16,175,2,12,19,146,176,2,0,64,36,146
	.db	161,2,2,33,8,176,2
	; End of section

	.debug		.debug_frame, cluster 'ADC0_vInit'
	.dl	172
	.dl	_196,_9,_42-_9
	.db	8,160,2,8,2,8,3,8,4,8,5,8,13,8,14,4
	.dl	(_64-_9)/2
	.db	15,60,127,0,18,10
	.dw	16383
	.db	26,22,62,37,18,48,46,40
	.dw	_86-_90
_90:
	.db	146,177,2,0,47
	.dw	_89-_91
_91:
_86:
	.db	18,49,46,40
	.dw	_87-_92
_92:
	.db	146,178,2,0,47
	.dw	_89-_93
_93:
_87:
	.db	18,50,46,40
	.dw	_88-_94
_94:
	.db	146,179,2,0,47
	.dw	_89-_95
_95:
_88:
	.db	146,180,2,0
_89:
	.db	22,19,62,36,33,50,34,22,15,3,19,127,2,4
	.dl	(_75-_64)/2
	.db	15,60,127,0,18,10
	.dw	16383
	.db	26,22,62,37,18,48,46,40
	.dw	_96-_100
_100:
	.db	146,177,2,0,47
	.dw	_99-_101
_101:
_96:
	.db	18,49,46,40
	.dw	_97-_102
_102:
	.db	146,178,2,0,47
	.dw	_99-_103
_103:
_97:
	.db	18,50,46,40
	.dw	_98-_104
_104:
	.db	146,179,2,0,47
	.dw	_99-_105
_105:
_98:
	.db	146,180,2,0
_99:
	.db	22,19,62,36,33,48,34,8,15,0,0,0
	; End of section

	.debug		.debug_frame, cluster 'ADC0_vStartSeq0ReqChNum'
	.dl	24
	.dl	_196,_21,_47-_21
	.db	8,160,2,8,4,8,5,8,13,8,14,0
	; End of section

	.debug		.debug_frame
_207:
	.dl	120
	.dl	-1
	.db	3,0,2,2,173,2,15,11,146,176,2,0,64,36,146,161,2,6,33,17,173,2,125,8,15,22,161,2,5,19,146,161,2,6,8,162
	.db	2,8,166,2,8,160,2,8,177,2,8,178,2,8,179,2,8,180,2,8,0,8,1,8,2,8,3,8,4,8,5,8,6,8,7,8,8,8,9,8,10,8,11,8
	.db	12,8,13,8,14,8,167,2,8,168,2,8,169,2,8,170,2,8,171,2,8,172,2,17,174,2,125,17,175,2,126,8,176,2,0,0
	; End of section

	.debug		.debug_frame, cluster 'ADC0_viSRN0'
	.dl	236
	.dl	_207,_33,_52-_33
	.db	4
	.dl	(_107-_33)/2
	.db	15,11,146,176,2,0,64,36,146,161,2,8,33,22,161,2,5,19,146,161,2,8,4
	.dl	(_108-_107)/2
	.db	15,11,146,176,2,0,64,36,146,161,2,10,33,22,161,2,5,19,146,161,2,10,4
	.dl	(_109-_108)/2
	.db	15,11,146,176,2,0,64,36,146,161,2,12,33,22,161,2,5,19,146,161,2,12,17,11,122,4
	.dl	(_110-_109)/2
	.db	15,11,146,176,2,0,64,36,146,161,2,14,33,22,161,2,5,19,146,161,2,14,17,12,121,4
	.dl	(_111-_110)/2
	.db	15,11,146,176,2,0,64,36,146,161,2,12,33,22,161,2,5,19,146,161,2,12,204,4
	.dl	(_112-_111)/2
	.db	15,11,146,176,2,0,64,36,146,161,2,10,33,22,161,2,5,19,146,161,2,10,203,4
	.dl	(_113-_112)/2
	.db	15,11,146,176,2,0,64,36,146,161,2,8,33,22,161,2,5,19,146,161,2,8,4
	.dl	(_114-_113)/2
	.db	15,11,146,176,2,0,64,36,146,161,2,6,33,22,161,2,5,19,146,161,2,6
	; End of section


; ..\ADC0.c	   511  
; ..\ADC0.c	   512  
; ..\ADC0.c	   513  
; ..\ADC0.c	   514  // USER CODE BEGIN (ADC0_General,10)
; ..\ADC0.c	   515  
; ..\ADC0.c	   516  // USER CODE END
; ..\ADC0.c	   517  

	; Module end
	.end
